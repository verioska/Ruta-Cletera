{"version":3,"sources":["Components/Map/Map.js","Components/User/User.js","Components/Footer/Footer.js","Components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","platform","map","state","app_id","app_code","useHTTPS","center","lat","lng","zoom","window","H","service","Platform","layer","createDefaultLayers","container","refs","normal","events","mapevents","MapEvents","Behavior","ui","UI","createDefault","_this2","startPoint","endPoint","routingParameters","mode","waypoint0","long","waypoint1","representation","onResult","result","route","routeShape","linestring","console","log","response","shape","geo","LineString","forEach","point","parts","split","pushLatLngAlt","waypoint","mappedPosition","routeLine","Polyline","style","strokeColor","lineWidth","startMarker","Marker","latitude","longitude","endMarker","addObjects","setViewBounds","getBounds","router","getRoutingService","calculateRoute","error","alert","message","react_default","a","createElement","ref","width","height","background","Component","User","Footer","className","onClick","onClik","Navbar","start","end","functionStart","bind","assertThisInitialized","functionEnd","event","setState","objectSpread","target","value","class","href","type","data-toggle","data-target","id","onChange","placeholder","coordinates","App","user","functionCoordinates","functionUser","functionMap","navigator","geolocation","getCurrentPosition","position","coords","fetch","then","data","json","Response","View","Result","Location","NavigationPosition","Latitude","Longitude","address","Address","Label","Components_Navbar_Navbar","Components_User_User","Components_Map_Map","Components_Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3548c1f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n\r\n\r\nclass Map extends Component {\r\n constructor(props) {\r\n   super(props);\r\n\r\n   this.platform = null;\r\n   this.map = null;\r\n\r\n   this.state = {\r\n     app_id: props.app_id,\r\n     app_code: props.app_code,\r\n     useHTTPS: true,\r\n     // useCIT: true,\r\n     center: {\r\n       lat: props.lat,\r\n       lng: props.lng,\r\n     },\r\n     zoom: props.zoom,\r\n     \r\n   }\r\n }\r\n\r\n\r\n componentDidMount() {\r\n\r\n   this.platform = new window.H.service.Platform(this.state);\r\n\r\n   var layer = this.platform.createDefaultLayers();\r\n   var container = this.refs[\"here-map\"];\r\n\r\n   this.map = new window.H.Map(container, layer.normal.map, {\r\n     center: this.state.center,\r\n     zoom: this.state.zoom,\r\n   })\r\n\r\n   var events = new window.H.mapevents.MapEvents(this.map);\r\n   // eslint-disable-next-line\r\n   var behavior = new window.H.mapevents.Behavior(events);\r\n   // eslint-disable-next-line\r\n   var ui = new window.H.ui.UI.createDefault(this.map, layer)\r\n\r\n   \r\n\r\n }\r\n\r\n componentDidUpdate() {\r\n\r\n   if (this.props.startPoint.lat !== \"\" && this.props.endPoint.lat !== \"\") {\r\n   \r\n     this.routingParameters = {\r\n       'mode': 'fastest;pedestrian',\r\n       'waypoint0': \"geo!\" + this.props.startPoint.lat + \",\" + this.props.startPoint.long,\r\n       'waypoint1': \"geo!\" + this.props.endPoint.lat + \",\" + this.props.endPoint.long,\r\n       'representation': 'display'\r\n     };\r\n\r\n     this.onResult = result => {\r\n       console.log(result)\r\n       var route,\r\n         routeShape,\r\n         startPoint,\r\n         endPoint,\r\n         linestring;\r\n       if (result.response && result.response.route) {\r\n         // Pick the first route from the response:\r\n         route = result.response.route[0];\r\n         // Pick the route's shape:\r\n         routeShape = route.shape;\r\n\r\n         // Create a linestring to use as a point source for the route line\r\n         linestring = new window.H.geo.LineString();\r\n\r\n         // Push all the points in the shape into the linestring:\r\n         routeShape.forEach(function (point) {\r\n           var parts = point.split(',');\r\n           linestring.pushLatLngAlt(parts[0], parts[1]);\r\n         });\r\n\r\n         // Retrieve the mapped positions of the requested waypoints:\r\n         startPoint = route.waypoint[0].mappedPosition;\r\n         endPoint = route.waypoint[1].mappedPosition;\r\n\r\n         // Create a polyline to display the route:\r\n         this.routeLine = new window.H.map.Polyline(linestring, {\r\n           style: { strokeColor: 'blue', lineWidth: 2 }\r\n         });\r\n\r\n         // Create a marker for the start point:\r\n         this.startMarker = new window.H.map.Marker({\r\n           lat: startPoint.latitude,\r\n           lng: startPoint.longitude\r\n         });\r\n\r\n         // Create a marker for the end point:\r\n         this.endMarker = new window.H.map.Marker({\r\n           lat: endPoint.latitude,\r\n           lng: endPoint.longitude\r\n         });\r\n\r\n         // Add the route polyline and the two markers to the map:\r\n         this.map.addObjects([this.routeLine, this.startMarker, this.endMarker]);\r\n\r\n         // Set the map's viewport to make the whole route visible:\r\n         this.map.setViewBounds(this.routeLine.getBounds());\r\n       }\r\n     };\r\n\r\n     // Get an instance of the routing service:\r\n     this.router = this.platform.getRoutingService();\r\n\r\n     // Call calculateRoute() with the routing parameters,\r\n     // the callback and an error callback function (called if a\r\n     // communication error occurs):\r\n     this.router.calculateRoute(this.routingParameters, this.onResult,\r\n       function (error) {\r\n         alert(error.message);\r\n       });\r\n\r\n   }\r\n }\r\n\r\n render() {\r\n   return (\r\n\r\n     <div ref=\"here-map\" style={{ width: '100%', height: '660px', background: '#00BCD4' }}>\r\n\r\n     </div>\r\n   );\r\n }\r\n}\r\n\r\n\r\nexport default Map;","import React, { Component } from 'react';\r\n\r\nclass User extends Component{\r\n   \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            hola\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default User","import React, { Component } from 'react';\r\nimport '../Footer/Footer.css'\r\n\r\nclass Footer extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n            <footer className=\"footer\">\r\n                \r\n            <div className=\"container\" >\r\n            <div className=\"row\">\r\n                <i className=\"far fa-newspaper icon\"></i>\r\n                <i onClick={this.props.map}  className=\"fas fa-map-marked-alt icon\"></i>\r\n                <i onClick={this.props.onClik} className=\"far fa-user icon\"></i>\r\n               \r\n                \r\n\r\n\r\n            </div>\r\n            </div>\r\n            </footer> \r\n              \r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Footer","import React, { Component } from 'react';\r\nimport './Navbar.css'\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        start: '',\r\n        end: ''\r\n      }\r\n      this.functionStart = this.functionStart.bind(this);\r\n      this.functionEnd = this.functionEnd.bind(this);\r\n    \r\n  }\r\n\r\n  functionStart(event){\r\n    this.setState({\r\n        ...this.state,\r\n        start: event.target.value\r\n    })\r\n\r\n  }\r\n  functionEnd(event){\r\n    this.setState({\r\n        ...this.state,\r\n        end: event.target.value\r\n    })\r\n\r\n  }\r\n \r\n\r\n  render() {\r\n      return (\r\n          <div className=\"navbar\">\r\n\r\n <nav className=\"navbar navbar-inverse\"> \r\n\r\n<a class=\"navbar-brand\" href=\".#\">RutaCletera</a>\r\n<div className=\"container-fluid\">\r\n<div className=\"navbar-header\">  \r\n    \r\n    <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n    <span><i className=\"fas fa-search\"></i></span>\r\n    </button>\r\n    \r\n      <span><i className=\"fas fa-ellipsis-v\"></i></span>\r\n  \r\n\r\n\r\n    <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n        <input className=\"inputRoute\" onChange={(event) => this.functionStart(event)}  value={this.state.start} placeholder=\"Punto de Partida\"></input>\r\n        <input className=\"inputRoute\" onChange={(event) => this.functionEnd(event)}  value={this.state.end}placeholder=\"Destino\"></input>\r\n       \r\n       <div className=\"buttonSearch\">\r\n        <button id=\"search\" onClick={() => this.props.coordinates(this.state.start, this.state.end)}>Buscar ruta</button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n  </div>  \r\n  </div>  \r\n</nav>\r\n           \r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport Map from './Components/Map/Map';\r\nimport User from './Components/User/User'\r\nimport Footer from './Components/Footer/Footer';\r\nimport Navbar from './Components/Navbar/Navbar';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      app_id: \"dPPKrUEpsqpYWIAVcmLD\",\r\n      app_code: \"4Uosgp7aDFaZc0VoxXZTEg\",\r\n      user:false,\r\n      map:false,\r\n      startPoint: {\r\n        lat: '',\r\n        long: '',\r\n      },\r\n      endPoint: {\r\n        lat: '',\r\n        long: '',\r\n      },\r\n\r\n    }\r\n\r\n    this.functionCoordinates = this.functionCoordinates.bind(this);\r\n    this.functionUser = this.functionUser.bind(this);\r\n    this.functionMap = this.functionMap.bind(this);\r\n  }\r\n\r\n  functionUser(){\r\n    this.setState({\r\n    ...this.state,\r\n    user:true,\r\n    map:false\r\n  });\r\n  //  \r\n}\r\n\r\nfunctionMap(){\r\n  this.setState({\r\n  ...this.state,\r\n  map:true,\r\n  user:false\r\n});\r\n//  \r\n}\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      ...this.state,\r\n      map:true,\r\n      user:false\r\n    });\r\n    if (navigator.geolocation) {\r\n      console.log(navigator.geolocation)\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          this.setState({\r\n            ...this.state,\r\n            lat: position.coords.latitude,\r\n            long: position.coords.longitude,\r\n            error: null,\r\n          });\r\n        },\r\n        (error) => {\r\n          // alert(error.message)\r\n          this.setState({\r\n            ...this.state,\r\n            error: error.message\r\n          })\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  async functionCoordinates (start, end) {\r\n    this.startPoint = await fetch(\"https://geocoder.api.here.com/6.2/geocode.json?app_id=\" + this.state.app_id + \"&app_code=\" + this.state.app_code + \"&searchtext=\" + start)\r\n      .then(data => data.json())\r\n      .then(data => {\r\n        console.log(data,\"esta\")\r\n        return {\r\n          lat: data.Response.View[0].Result[0].Location.NavigationPosition[0].Latitude,\r\n          long: data.Response.View[0].Result[0].Location.NavigationPosition[0].Longitude,\r\n          address: data.Response.View[0].Result[0].Location.Address.Label,\r\n        }\r\n      })\r\n    this.endPoint = await fetch(\"https://geocoder.api.here.com/6.2/geocode.json?app_id=\" + this.state.app_id + \"&app_code=\" + this.state.app_code + \"&searchtext=\" + end)\r\n      .then(data => data.json())\r\n      .then(data => {\r\n        return {\r\n          lat: data.Response.View[0].Result[0].Location.NavigationPosition[0].Latitude,\r\n          long: data.Response.View[0].Result[0].Location.NavigationPosition[0].Longitude,\r\n          address: data.Response.View[0].Result[0].Location.Address.Label,\r\n        }\r\n      })\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      startPoint: {\r\n        ...this.startPoint\r\n        \r\n    },\r\n    endPoint: {\r\n        ...this.endPoint\r\n        \r\n    },\r\n    \r\n})\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <Navbar  coordinates={this.functionCoordinates}/>\r\n        {this.state.user &&\r\n                \r\n                <User/>\r\n            }\r\n                {this.state.map &&\r\n        <Map\r\n          app_id={this.state.app_id}\r\n          app_code={this.state.app_code}\r\n          lat=\"-33.4489\"\r\n          lng=\"-70.6693\"\r\n          zoom=\"13\"\r\n          startPoint={this.state.startPoint}\r\n          endPoint={this.state.endPoint}\r\n     \r\n\r\n        />}\r\n\r\n      \r\n\r\n       <Footer onClik={this.functionUser}\r\n       map={this.functionMap}/>\r\n\r\n       \r\n\r\n      </div>\r\n    );\r\n  }}\r\n  export default App;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}